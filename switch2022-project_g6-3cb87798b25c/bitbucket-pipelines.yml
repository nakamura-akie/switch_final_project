#  bitbucket-pipelines.yml

#  Template maven-build

#  This template allows you to test and build your Java project with Maven.
#  The workflow allows running tests, code checkstyle and security scans on the default branch.

# Prerequisites: pom.xml and appropriate project structure should exist in the repository.

#image: maven:3.8.7
#image: maven:3.8.7-amazoncorretto-11

options:
  max-time: 25

definitions:
  caches:
    sonar: ~/.sonar
    sonar-root: root/.sonar
    pitest: target/.pitest-cache

clone:
  depth: 5
  enabled: false
  
pipelines:
  default:
#    - parallel:
#      - step:
#          name: Sync to GitHub usig Git Mirror
#          image: alpine/git:latest
#          clone:
#            enabled: false
#          script:
#            - git clone --bare git@bitbucket.org:$BITBUCKET_REPO_FULL_NAME.git
#            - cd $BITBUCKET_REPO_SLUG.git
#            - git push --mirror git@github.com:Departamento-de-Engenharia-Informatica/switch-2022-${BITBUCKET_REPO_SLUG#*_}.git

#      - step:
#          name: Java Version
#          script:
#            - java -version
###Reduce execution time
#      - step: #variables are not implicity shared between steps
#          name: Set Up Variables
#          script:
#            - SONAR_MAVEN_PLUGIN_VERSION="3.9.1.2184"                      
#      - step: 
#          name: Create Pitest Cache folder
#          script:
#            - mkdir -p target/.pitest-cache
#            
      - step:
          name: Build, Test & SonarQube Analysis
          image: maven:3.8.7-amazoncorretto-11
          clone:
            enabled: true
          caches:
            - maven
            - sonar
            - sonar-root
            - pitest
          script: 
#            - mkdir -p target/.pitest-cache
#            - echo "SONAR_MAVEN_PLUGIN_VERSION - $SONAR_MAVEN_PLUGIN_VERSION"
            - >- 
              mvn -B --file pom.xml 
              test 
              jacoco:report 
              org.pitest:pitest-maven:mutationCoverage
              verify
              org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar
              -Dthreads=2 
              -DhistoryInputFile=target/.pitest-cache/.faster-pitest-mutation-testing.txt 
              -DhistoryOutputFile=target/.pitest-cache/.faster-pitest-mutation-testing.txt
              -DtimestampedReports=false 
              -Dsonar.pitest.mode=reuseReport 
              -Dsonar.sourceEncoding=UTF-8 
              -Dsonar.sources=src/main/ 
              -Dsonar.cpd.exclusions=**/test/** 
              -Dsonar.issue.ignore.multicriteria=e5,e6,e7,e8,e9,e10 
              -Dsonar.issue.ignore.multicriteria.e5.ruleKey=squid:S106 
              -Dsonar.issue.ignore.multicriteria.e5.resourceKey=**/ui/**/*.java 
              -Dsonar.issue.ignore.multicriteria.e6.ruleKey=squid:S00112 
              -Dsonar.issue.ignore.multicriteria.e6.resourceKey=**/*.java 
              -Dsonar.issue.ignore.multicriteria.e7.ruleKey=squid:S1148 
              -Dsonar.issue.ignore.multicriteria.e7.resourceKey=**/*.java 
              -Dsonar.issue.ignore.multicriteria.e8.ruleKey=squid:S1166 
              -Dsonar.issue.ignore.multicriteria.e8.resourceKey=**/*.java 
              -Dsonar.issue.ignore.multicriteria.e9.ruleKey=squid:S2250 
              -Dsonar.issue.ignore.multicriteria.e9.resourceKey=**/*.java 
              -Dsonar.issue.ignore.multicriteria.e10.ruleKey=squid:S3422 
              -Dsonar.issue.ignore.multicriteria.e10.resourceKey=**/*.xml
              -Dsonar.projectName="SWITCH-2022 switch-2022-${BITBUCKET_REPO_SLUG#*_}-bitbucket pipeline"
#          after-script:
              # Collect checkstyle results, if any, and convert to Bitbucket Code Insights.
#            - pipe: atlassian/checkstyle-report:0.3.0
#      - step:
#          name: Security Scan
#          script:
            # Run a security scan for sensitive data.
            # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
#            - pipe: atlassian/git-secrets-scan:0.5.1